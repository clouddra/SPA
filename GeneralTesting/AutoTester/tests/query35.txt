216
cat: All Category
9001 - Typed
assign abcde;
Select abcde
1,2,3,5,6,7,8,9,10,13,14,15,16,18,19,20,21,22,23,25,27,28,31,33,35,37,39,40,42,48,50,51,52,53,54,55,57,60,62,64,67,69,70,71,72,73,74,75,76,77,78,88,89,90,91,92,93,94,96,97,98,99,100,103,105,106,108,109,110,111,112,113,114,115,118,119,121,122,124,125,126,128,129,130,134,135,137,138
5000
9002 - Typed
if iffff;
Select iffff
4,12,17,41,49,79,80,81,83,85,87,101,117,120,133
5000
9003 - Typed
while WhileY;
Select WhileY
11,24,26,29,32,34,36,38,56,63,66,68,104,107,116,127
5000
9004 - Typed
variable vvvv;
Select vvvv
x,y,z,home,c8g,y1,y12,y123,y1234,a2b3c,korean,sarang,haeyo,hello,annyeong,yesANDno,noANDyes,here123,efgh,z5,mnop,lalala,happy,abcd,equals,piggydap,chinese,english,f123g,gf456,yummy,back,somerset,egg99,aAbBcCdD,AaBbCcDd,d7ia,d7ib,d7ic,d7id,d7ie,ha99y,aA12345bB,v123abc45,a1,b2,c3,d4,equal99,yeah,snore,year,total,prog1,up,lax,not,pain,ouch,helloWorld,pig,late4school,a,hungry,noandyes,snoring,yesANDNo
5000
9005 - Typed :: With Clause
procedure p;
Select p with p.procName = "Procedure"
none
5000
9006 - Typed :: With Clause
procedure p;
Select p with p.procName = "Lazy"
Lazy
5000
1201 - Parent, Typed, ImplStmtLine :: Parent query with two clauses, NO synonym
assign a1, a2;
Select <a1,a2> such that Parent*(69,_) and Affects*(a1,a2)
none
5000
1211 - Parent, Typed, ImplStmtLine :: Parent query with two clauses, ONE synonym
variable v; stmt s1;
Select <s1,v> such that Parent(s1,24) and Modifies(s1,v)
none
5000
1221 - ParentStar, Typed, ImplStmtLine :: ParentStar query with two clauses, TWO synonym
procedure prog1, prog2; stmt s1, s2;
Select <s1,prog1> such that Parent*(s1,s2) and Calls(prog1,prog2)
101 Hardworking,101 Lazy,101 p3,104 Hardworking,104 Lazy,104 p3,107 Hardworking,107 Lazy,107 p3,11 Hardworking,11 Lazy,11 p3,116 Hardworking,116 Lazy,116 p3,117 Hardworking,117 Lazy,117 p3,12 Hardworking,12 Lazy,12 p3,120 Hardworking,120 Lazy,120 p3,127 Hardworking,127 Lazy,127 p3,133 Hardworking,133 Lazy,133 p3,17 Hardworking,17 Lazy,17 p3,24 Hardworking,24 Lazy,24 p3,26 Hardworking,26 Lazy,26 p3,29 Hardworking,29 Lazy,29 p3,32 Hardworking,32 Lazy,32 p3,34 Hardworking,34 Lazy,34 p3,36 Hardworking,36 Lazy,36 p3,38 Hardworking,38 Lazy,38 p3,4 Hardworking,4 Lazy,4 p3,41 Hardworking,41 Lazy,41 p3,49 Hardworking,49 Lazy,49 p3,56 Hardworking,56 Lazy,56 p3,63 Hardworking,63 Lazy,63 p3,66 Hardworking,66 Lazy,66 p3,68 Hardworking,68 Lazy,68 p3,79 Hardworking,79 Lazy,79 p3,80 Hardworking,80 Lazy,80 p3,81 Hardworking,81 Lazy,81 p3,83 Hardworking,83 Lazy,83 p3,85 Hardworking,85 Lazy,85 p3,87 Hardworking,87 Lazy,87 p3
5000
2201 - Follows, Typed, ImplStmtLine :: Follows query with two clauses, NO synonym
procedure pig1, pig2;
Select <pig1,pig2> such that Follows(28,_) and Calls(pig1,pig2)
Hardworking p3,Lazy Hardworking,Lazy p3,p3 p4
5000
2211 - Follows, Typed, ImplStmtLine :: Follows query with two clauses, ONE synonym
stmt s1;
Select s1 such that Follows(s1, 49) and Modifies(s1, "annyeong")
none
5000
2221 - Follows, Typed, ImplStmtLine :: Follows query with two clauses, TWO synonym
if if1; while w1, w2; 
Select if1 such that Follows(if1, w1) and Follows(w2, if1)
none
5000
2222 - Follows, Typed, ImplStmtLine :: Follows query with two clauses, TWO synonym
if if1; while w1; assign ass; 
Select if1 such that Follows(if1, w1) and Follows(if1, ass)
none
5000
2223 - Follows, Typed, ImplStmtLine :: Follows query with two clauses, TWO synonym
if if1; while w1; assign ass; 
Select <if1, w1, ass> such that Follows(w1, if1) and Follows(ass, w1)
133 116 115
5000
2224 - Follows, Typed, ImplStmtLine :: Follows query with two clauses, TWO synonym
if if1; while w1; assign ass; 
Select <if1, w1, ass> such that Follows(w1, if1) and Follows(ass, w1)
133 116 115
5000
3201 - Affects, Typed, ImplStmtLine :: Affects query with two clauses, NO synonym
variable v1;
Select v1 such that Affects(9,_) and Modifies(_,"piggydap")
none
5000
3211 - Affects, Typed, ImplStmtLine :: Affects query with two clauses, ONE synonym
assign a1; procedure p1; variable v;
Select a1 such that Affects(a1,_) and Uses(p1,v)
1,2,3,7,8,9,14,19,21,22,27,28,31,33,35,39,42,48,50,52,53,55,60,62,64,67,69,71,72,77,90,93,96,97,98,99,103,105,106,108,115,124,125,126,128,129
5000
3212 - AffectsStar, Typed, ImplStmtLint :: AffectsStar query with two clauses, ONE synonym
procedure hello; assign assigning;
Select <hello,assigning> such that Affects*(assigning, 45) and Calls("Hardworking", hello)
none
5000
3221 - Affects, Typed, ImplStmtLine :: Affects query with two clauses, TWO synonym
assign a1, a2;
Select <a1,a2> such that Affects(a1,a2) and Parent*(24,_)
1 6,103 112,105 105,105 112,106 108,106 112,108 112,115 125,124 129,125 134,126 119,128 125,128 137,129 119,14 54,19 71,2 10,2 6,2 7,21 22,22 18,22 51,22 94,27 33,27 37,27 90,27 92,28 33,28 37,3 6,31 39,31 48,31 54,31 55,31 60,31 62,33 39,33 40,33 54,33 55,33 62,33 71,35 40,35 64,39 40,39 52,42 40,48 92,50 51,50 94,52 91,53 55,55 70,60 52,62 71,64 64,67 33,67 37,67 69,67 90,67 92,69 90,7 10,7 8,71 33,71 37,72 73,77 94,8 10,8 40,8 9,9 10,9 93,90 92,93 71,96 100,96 112,97 100,97 112,98 100,98 105,98 112,99 100,99 112
5000
4201 - Calls, Typed, ImplStmtLine :: Follows query with two clauses, NO synonym
procedure p1, p2;
Select <p1,p2> such that Calls(_,_) and Next(_,_)
Hardworking Hardworking,Hardworking Lazy,Hardworking p3,Hardworking p4,Lazy Hardworking,Lazy Lazy,Lazy p3,Lazy p4,p3 Hardworking,p3 Lazy,p3 p3,p3 p4,p4 Hardworking,p4 Lazy,p4 p3,p4 p4
5000
4211 - Calls, Typed, ImplStmtLine :: Calls query with two clauses, ONE synonym
procedure proc; assign a123;
Select <proc,a123> such that Calls("Hardworking", proc) and Affects*(a123, 45)
none
5000
4221 - Calls, Typed, ImplStmtLine :: Follows query with two clauses, TWO synonym
procedure p1, p2; 
Select <p1,p2> such that Calls(p1,p2) and Follows(_,_)
Hardworking p3,Lazy Hardworking,Lazy p3,p3 p4
5000
5201 - Next, Typed, ImplStmtLine :: Next query with two clauses, NO synonym
procedure p1, p2;
Select <p1,p2> such that Calls(_,_) and Next(_,_)
Hardworking Hardworking,Hardworking Lazy,Hardworking p3,Hardworking p4,Lazy Hardworking,Lazy Lazy,Lazy p3,Lazy p4,p3 Hardworking,p3 Lazy,p3 p3,p3 p4,p4 Hardworking,p4 Lazy,p4 p3,p4 p4
5000
5211 - Next, Typed, ImplStmtLine :: Next query with two clauses, ONE synonym
stmt s1;
Select s1 such that Next(s1,_) and Parent*(29,57)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,  23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,  43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,  63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,  83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101,  102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117,  118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133,  134, 135
5000
5221 - Next, Typed, ImplStmtLine :: Next query with two clauses, TWO synonym
procedure p; stmt s1, s2;
Select <p,s1> such that Next(s1,s2) and Uses(p, "d7ie")
Lazy 1, Lazy 2, Lazy 3, Lazy 4, Lazy 5, Lazy 6, Lazy 7, Lazy 8, Lazy 9, Lazy 10, Lazy 11, Lazy 12, Lazy 13, Lazy 14, Lazy 15, Lazy 16, Lazy 17, Lazy 18, Lazy 19, Lazy 20, Lazy 21, Lazy 22, Lazy 23,Lazy 24, Lazy 25, Lazy 26, Lazy 27, Lazy 28, Lazy 29, Lazy 30, Lazy 31, Lazy 32, Lazy 33, Lazy 34, Lazy 35, Lazy 36, Lazy 37, Lazy 38, Lazy 39, Lazy 40, Lazy 41, Lazy 42, Lazy 43,Lazy 44, Lazy 45, Lazy 46, Lazy 47, Lazy 48, Lazy 49, Lazy 50, Lazy 51, Lazy 52, Lazy 53, Lazy 54, Lazy 55, Lazy 56, Lazy 57, Lazy 58, Lazy 59, Lazy 60, Lazy 61, Lazy 62, Lazy 63,Lazy 64,Lazy 65, Lazy 66, Lazy 67, Lazy 68, Lazy 69, Lazy 70, Lazy 71, Lazy 72,Lazy 73, Lazy 74, Lazy 75, Lazy 76, Lazy 77, Lazy 78, Lazy 79, Lazy 80, Lazy 81, Lazy 82, Lazy 83, Lazy 84, Lazy 85, Lazy 86, Lazy 87, Lazy 88, Lazy 89, Lazy 90, Lazy 91, Lazy 92, Lazy 93, Lazy 94, Lazy 96, Lazy 97, Lazy 98, Lazy 99, Lazy 100, Lazy 101, Lazy 102, Lazy 103, Lazy 104, Lazy 105, Lazy 106, Lazy 107, Lazy 108, Lazy 109, Lazy 110, Lazy 111, Lazy 113, Lazy 114, Lazy 115, Lazy 116, Lazy 117, Lazy 118, Lazy 119, Lazy 120, Lazy 121, Lazy 122, Lazy 123, Lazy 124, Lazy 125, Lazy 126, Lazy 127, Lazy 128, Lazy 129, Lazy 130, Lazy 131, Lazy 132, Lazy 133,  Lazy 134, Lazy 135
5000
6201 - Uses, Typed, ImplStmtLine :: Uses query with two clauses, NO synonym
procedure prog;
Select prog such that Uses(15,"happy") and Uses(prog, "happy")
none
5000
6211 - Uses, Typed, ImplStmtLine :: Uses query with two clauses, ONE synonym
procedure p; stmt s1, s2;
Select <p,s1> such that Uses(p, "d7id") and Next(s1,s2)
Lazy 1, Lazy 2, Lazy 3, Lazy 4, Lazy 5, Lazy 6, Lazy 7, Lazy 8, Lazy 9, Lazy 10, Lazy 11, Lazy 12, Lazy 13, Lazy 14, Lazy 15, Lazy 16, Lazy 17, Lazy 18, Lazy 19, Lazy 20, Lazy 21, Lazy 22, Lazy 23,Lazy 24, Lazy 25, Lazy 26, Lazy 27, Lazy 28, Lazy 29, Lazy 30, Lazy 31, Lazy 32, Lazy 33, Lazy 34, Lazy 35, Lazy 36, Lazy 37, Lazy 38, Lazy 39, Lazy 40, Lazy 41, Lazy 42, Lazy 43,Lazy 44, Lazy 45, Lazy 46, Lazy 47, Lazy 48, Lazy 49, Lazy 50, Lazy 51, Lazy 52, Lazy 53, Lazy 54, Lazy 55, Lazy 56, Lazy 57, Lazy 58, Lazy 59, Lazy 60, Lazy 61, Lazy 62, Lazy 63,Lazy 64,Lazy 65, Lazy 66, Lazy 67, Lazy 68, Lazy 69, Lazy 70, Lazy 71, Lazy 72,Lazy 73, Lazy 74, Lazy 75, Lazy 76, Lazy 77, Lazy 78, Lazy 79, Lazy 80, Lazy 81, Lazy 82, Lazy 83, Lazy 84, Lazy 85, Lazy 86, Lazy 87, Lazy 88, Lazy 89, Lazy 90, Lazy 91, Lazy 92, Lazy 93, Lazy 94, Lazy 96, Lazy 97, Lazy 98, Lazy 99, Lazy 100, Lazy 101, Lazy 102, Lazy 103, Lazy 104, Lazy 105, Lazy 106, Lazy 107, Lazy 108, Lazy 109, Lazy 110, Lazy 111, Lazy 113, Lazy 114, Lazy 115, Lazy 116, Lazy 117, Lazy 118, Lazy 119, Lazy 120, Lazy 121, Lazy 122, Lazy 123, Lazy 124, Lazy 125, Lazy 126, Lazy 127, Lazy 128, Lazy 129, Lazy 130, Lazy 131, Lazy 132, Lazy 133,  Lazy 134, Lazy 135
5000
6221 - Uses, Typed, ImplStmtLine :: Uses query with two clauses, TWO synonym
assign a1; procedure p1; variable v;
Select a1 such that Affects(a1,_) and Uses(p1,v)
1,2,3,7,8,9,14,19,21,22,27,28,31,33,35,39,42,48,50,52,53,55,60,62,64,67,69,71,72,77,90,93,96,97,98,99,103,105,106,108,115,124,125,126,128,129
5000
7201 - Modifies, Typed, ImplStmtLine :: Modifies query with two clauses, NO synonym
variable tired;
Select tired such that Affects(7,_) and Modifies(_,"korean")
none
5000
7211 - Modifies, Typed, ImplStmtLine :: Modifies query with two clauses, ONE synonym
stmt state;
Select state such that Modifies(state,"snoring") and Follows(103,state)
none
5000
7221 - Modifies, Typed, ImplStmtLine :: Modifies query with two clauses, TWO synonym
procedure p; variable v; stmt s1;
Select <p,v> such that Modifies(s1,v) and Parent(s1,50)
Hardworking y1234,Hardworking z5,Lazy y1234,Lazy z5,p3 y1234,p3 z5,p4 y1234,p4 z5
5000
7222 -  Modifies, Typed, ImplStmtLine :: Modifies query with two clauses, TWO synonym, With Clause
procedure p; stmt s; variable v;
Select <p, s, v> such that Uses(p, v) and Modifies(s, v) with p.procName = "Lazy" and s.stmt# = 10
Lazy 10 y1234
5000
1101 - Parent, ImplStmtLine, Typed :: ONE clause with NO synonym
stmt s1;
Select s1 such that Parent(_,_)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
5000
1111 - Parent, ImplStmtLine, Typed :: ONE clause with ONE synonym
stmt s1;
Select s1 such that Parent(s1, _)
101, 104, 107, 11, 116, 117, 12, 120, 127, 133,17, 24, 26, 29, 32, 34, 36, 38, 4, 83, 41, 49, 56, 63, 66, 68, 79, 80, 81, 85, 87
5000
1112 - Parent, ImplStmtLine, Typed :: ONE clause with ONE synonym
stmt s2;
Select s2 such that Parent*(_, s2)
5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137
5000
1113 - ParentStar, ImplStmtLine, Typed :: ONE clause with ONE synonym
stmt s2;
Select s2 such that Parent*(_, s2)
5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137
5000
1114 - ParentStar, ImplStmtLine, Typed :: ONE clause with ONE synonym
stmt s1;
Select s1 such that Parent*(s1, _)
101, 104, 107, 11, 116, 117, 12, 120, 127, 133,17, 24, 26, 29, 32, 34, 36, 38, 4, 83, 41, 49, 56, 63, 66, 68, 79, 80, 81, 85, 87
5000
1121 - ParentStar, ImplStmtLine, Typed :: ONE clause with TWO synonym
while w;
Select w such that Parent*(w, 41)
24, 26, 29, 32, 34, 36, 38
5000
1122 - Parent, ImplStmtLine, Typed :: ONE clause with TWO synonym
stmt s;
Select s such that Parent(s,59)
56
5000
1123 - Parent, ImplStmtLine, Typed :: ONE clause with TWO synonym
assign a;
Select a such that Parent(13,a)
none
5000
1124 - ParentStar, ImplStmtLine, Typed :: ONE clause with TWO synonym
while w;
Select w such that Parent*(w, 69)
24, 26, 29, 32, 34, 56, 63, 66, 68
5000
1125 - Parent, ImplStmtLine, Typed :: ONE clause with TWO synonym
if if1; assign a;
Select <a, if1> such that Parent(if1, a)
103 101, 106 101, 109 101, 110 101, 111 101, 118 117, 119 117, 121 120, 122 120, 124 120, 125 117, 126 117, 129 117, 13 12, 130 117, 134 133, 135 133, 137 133, 14 12, 15 12, 16 12, 18 17, 19 17, 20 17, 42 41, 48 41, 5 4, 50 49, 51 49, 6 4, 88 87, 89 87, 90 85, 91 83, 92 81, 93 80, 94 79
5000
1126 - Parent, ImplStmtLine, Typed :: ONE clause with TWO synonym
if if; while w;
Select w such that Parent(w, if)
11, 116, 29, 38
5000
1127 - ParentStar, ImplStmtLine, Typed :: ONE clause with TWO synonym
if if; call c;
Select c such that Parent*(if,c)
102, 123, 131, 132, 136, 43, 44, 45, 46, 47, 82, 84, 86
5000
2101 - Follows, Typed, ImplStmtLine :: Follows with one clause, NO synonym
procedure p;
Select p such that Follows(_,_)
Hardworking,Lazy,p3,p4
5000
2102 - FollowsStar, Typed, ImplStmtLine :: FollowssStar with one clause, NO synonym
assign a1;
Select a1 such that Follows*(82, _)
1,10,100,103,105,106,108,109,110,111,112,113,114,115,118,119,121,122,124,125,126,128,129,13,130,134,135,137,138,14,15,16,18,19,2,20,21,22,23,25,27,28,3,31,33,35,37,39,40,42,48,5,50,51,52,53,54,55,57,6,60,62,64,67,69,7,70,71,72,73,74,75,76,77,78,8,88,89,9,90,91,92,93,94,96,97,98,99
5000
2111 - Follows, Typed, ImplStmtLine :: Follows with one clause, ONE synonym
stmt chervina;
Select chervina such that Follows(28, chervina)
29
5000
2112 - FollowsStar, Typed, ImplStmtLine :: FollowsStar with one clause, ONE synonym
assign a;
Select a such that Follows*(a, 93)
none
5000
2113 - FollowsStar, Typed, ImplStmtLine :: FollowsStar with one clause, ONE synonym, With Clause
procedure p; stmt s;
Select <p, s> such that Follows*(s, 10) with p.procName = "Lazy"
Lazy 1, Lazy 2, Lazy 3, Lazy 4, Lazy 7, Lazy 8, Lazy 9
5000
2121 - Follows, Typed, ImplStmtLine :: Follows query with one clause
assign ass; while w1; 
Select w1 such that Follows(ass, w1)
11, 24, 26, 29, 32, 34, 36, 38, 56, 63, 68, 104, 107, 116, 127
5000
2122 - Follows, Typed, ImplStmtLine :: Follows query with one clause
while w1; assign ass; 
Select w1 such that Follows(w1, ass)
11, 32, 34, 36, 38, 104, 127
5000
2123 - Follows, Typed, ImplStmtLine :: Follows query with one clause
if if1; while w1; 
Select if1 such that Follows(if1, w1)
none
5000
2124 - Follows, Typed, ImplStmtLine :: Follows query with one clause
while w1; if if1; 
Select if1 such that Follows(w1, if1)
133
5000
3101 - Affects, Typed, ImplStmtLine :: Affects with one clause, NO synonym
procedure p;
Select p such that Affects(12, "chinese")
none
5000
3102 - AffectsStar, Typed, ImplStmtLine :: AffectsStar with one clause, NO synonym
variable v11;
Select v11 such that Affects*(82, "piggydap")
none
5000
3111 - Affects, Typed, ImplStmtLine :: Affects with one clause, ONE synonym
assign o23;
Select o23 such that Affects(28, o23)
33, 37
5000
3112 - AffectsStar, Typed, ImplStmtLine :: AffectsStar with one clause, ONE synonym
assign a;
Select a such that Affects*(a, 47)
none
5000
3121 - Affects, Typed, ImplStmtLine :: Affects with one clause, TWO synonym
assign o23, t12;
Select t12 such that Affects(t12, o23)
1,103,105,106,108,115,124,125,126,128,129,14,19,2,21,22,27,28,3,31,33,35,39,42,48,50,52,53,55,60,62,64,67,69,7,71,72,77,8,9,90,93,96,97,98,99
5000
3122 - AffectsStar, Typed, ImplStmtLine :: AffectsStar with one clause, TWO synonym
assign a1, a2;
Select <a1,a2> such that Affects*(a1, a2)
1 6,103 112,105 105,105 112,106 108,106 112,108 112,115 125,115 134,124 119,124 129,125 134,126 119,128 125,128 134,128 137,129 119,14 54,19 33,19 37,19 39,19 40,19 52,19 54,19 55,19 62,19 70,19 71,19 91,2 10,2 33,2 37,2 39,2 40,2 52,2 54,2 55,2 6,2 62,2 7,2 70,2 71,2 8,2 9,2 91,2 93,21 18,21 22,21 51,21 94,22 18,22 51,22 94,27 33,27 37,27 39,27 40,27 52,27 54,27 55,27 62,27 70,27 71,27 90,27 91,27 92,28 33,28 37,28 39,28 40,28 52,28 54,28 55,28 62,28 70,28 71,28 91,3 6,31 33,31 37,31 39,31 40,31 48,31 52,31 54,31 55,31 60,31 62,31 70,31 71,31 91,31 92,33 33,33 37,33 39,33 40,33 52,33 54,33 55,33 62,33 70,33 71,33 91,35 40,35 64,39 40,39 52,39 91,42 40,48 92,50 51,50 94,52 91,53 55,53 70,55 70,60 52,60 91,62 33,62 37,62 39,62 40,62 52,62 54,62 55,62 62,62 70,62 71,62 91,64 64,67 33,67 37,67 39,67 40,67 52,67 54,67 55,67 62,67 69,67 70,67 71,67 90,67 91,67 92,69 90,69 92,7 10,7 33,7 37,7 39,7 40,7 52,7 54,7 55,7 62,7 70,7 71,7 8,7 9,7 91,7 93,71 33,71 37,71 39,71 40,71 52,71 54,71 55,71 62,71 70,71 71,71 91,72 73,77 94,8 10,8 33,8 37,8 39,8 40,8 52,8 54,8 55,8 62,8 70,8 71,8 9,8 91,8 93,9 10,9 33,9 37,9 39,9 40,9 52,9 54,9 55,9 62,9 70,9 71,9 91,9 93,90 92,93 33,93 37,93 39,93 40,93 52,93 54,93 55,93 62,93 70,93 71,93 91,96 100,96 112,97 100,97 112,98 100,98 105,98 112,99 100,99 112
5000
4101 - Calls, Typed, ImplStmtLine :: Calls with one clause, NO synonym
procedure p1, p2;
Select <p1,p2> such that Calls(_,_)
Hardworking Hardworking,Hardworking Lazy,Hardworking p3,Hardworking p4,Lazy Hardworking,Lazy Lazy,Lazy p3,Lazy p4,p3 Hardworking,p3 Lazy,p3 p3,p3 p4,p4 Hardworking,p4 Lazy,p4 p3,p4 p4
5000
4111 - Calls, Typed, ImplStmtLine :: Calls with one clause, ONE synonym
procedure p1;
Select p1 such that Calls(p1, "p3")
Hardworking, Lazy
5000
4112 - Calls, Typed, ImplStmtLine :: Calls with one clause, ONE synonym with with clause
procedure p1, p2;
Select <p1, p2> such that Calls(p1, p2) with p1.procName = "Procedure"
none
5000
4113 - Calls, Typed, ImplStmtLine :: Calls with one clause, ONE synonym with with clause
procedure p1, p2;
Select <p1, p2> such that Calls(p1, p2) with p1.procName = "Lazy"
Lazy Hardworking, Lazy p3
5000
4114 - Calls, Typed, ImplStmtLine :: Calls with one clause, TWO synonym
procedure p1, p2;
Select <p1,p2> such that Calls(p1, p2)
Hardworking p3,Lazy Hardworking,Lazy p3,p3 p4
5000
5101 - Next :: Next with one clause
stmt sss;
Select sss such that Next(_,_) 
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
5000
5111 - Next :: Next with one clause
stmt s;
Select s1 such that Next(s1, 5)
none
5000
5112 - Next :: Next with one clause
stmt sss;
Select sss such that Next (29, sss)
26, 30
5000
5113 - Next :: Next with one clause
stmt s1;
Select s1 such that Next(5, s1)
7
5000
5114 - Next :: Next with one clause
stmt s1;
Select s1 such that Next(_, s1)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137
5000
5121 - Next, Typed, ImplStmtLine :: Next, Next with one clause, TWO synonym
while ww; assign a1; 
Select <ww,a1> such that Next(ww,a1)
11 23,24 25,26 27,32 33,32 72,34 35,34 70,36 37,36 53,38 39,38 52,56 57,63 64,66 67,68 69,104 105,104 106,107 108,107 112,127 128,127 129
5000
6101 - Typed, Uses :: ONE clause with NO synonym
stmt s1;
Select s1 such that Uses(_,_)
none
5000
6102 - Typed, Uses :: ONE clause with NO synonym
stmt s1;
Select s1 such that Uses(_, "here123")
none
5000
6111 - Typed, Uses :: ONE clause with ONE synonym
assign a1;
Select a1 such that Uses(a1, _)
10, 100, 105, 108, 110, 112, 113, 115, 119, 121, 122, 125, 128, 129, 130, 134, 137, 14, 15, 16, 18, 19, 20, 22, 33, 37, 39, 40, 48, 51, 52, 54, 55, 6, 60, 62, 64, 69, 7, 70, 71, 73, 8, 89, 9, 90, 91, 92, 93, 94
5000
6112 - Typed, Uses :: ONE clause with ONE synonym
if if;
Select if1 such that Uses(if1, _)
none
5000
6113 - Typed, Uses :: ONE clause with ONE synonym
while w1;
Select w1 such that Uses(w1, _)
11, 24, 26, 29, 32, 34, 36, 38, 63, 66, 68, 107, 116, 127, 104, 56
5000
6114 - Typed, Uses :: ONE clause with ONE synonym
procedure p1;
Select p1 such that Uses(p1, _)
Lazy, Hardworking, p3
5000
6115 - Typed, Uses :: ONE clause with ONE synonym
call call1;
Select call1 such that Uses(call1, _)
30, 43, 44, 45, 46, 47, 58, 59, 61, 65, 82, 84, 86, 95, 102
5000
6116 - Typed, Uses :: ONE clause with ONE synonym
stmt s1;
Select s1 such that Uses(s1, _)
4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73,  79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 104, 105, 107, 108, 110, 112, 113, 115, 116, 117, 119, 120, 121, 122, 125, 127, 128, 129, 130, 133, 134, 137
5000
6121 - Typed, Uses :: ONE clause with TWO synonym
assign a1;
Select a1 such that Uses(a1, "chinese")
39, 48, 54, 55, 60, 62, 130
5000
6122 - Typed, Uses:: ONE clause with TWO synonym
stmt s1;
Select s1 such that Uses(s1, "hungry")
24, 26, 29, 32, 70
5000
6123 - Typed, Uses :: ONE clause with TWO synonym
procedure p;
Select p such that Uses(p, "happy")
Hardworking, Lazy
5000
6124 - Typed, Uses :: ONE clause with TWO synonym
procedure p; variable v;
Select <p, v> such that Uses(p, v)
Hardworking a1, Hardworking b2, Hardworking back, Hardworking c3, Hardworking chinese, Hardworking d4, Hardworking equals, Hardworking happy, Hardworking helloWorld, Hardworking here123, Hardworking late4school, Hardworking lax, Hardworking not, Hardworking ouch, Hardworking pain, Hardworking pig, Hardworking piggydap, Hardworking snore, Hardworking snoring, Hardworking somerset, Hardworking up, Hardworking x, Lazy a1, Lazy aAbBcCdD, Lazy abcd, Lazy annyeong, Lazy b2, Lazy back, Lazy c3, Lazy c8g, Lazy chinese, Lazy d4, Lazy d7ia, Lazy d7ib, Lazy d7ic, Lazy d7id, Lazy d7ie, Lazy efgh, Lazy egg99, Lazy english, Lazy equals, Lazy f123g, Lazy gf456, Lazy ha99y, Lazy haeyo, Lazy happy, Lazy helloWorld, Lazy here123, Lazy hungry, Lazy korean, Lazy lalala, Lazy late4school, Lazy lax, Lazy mnop, Lazy noANDyes, Lazy not, Lazy ouch, Lazy pain, Lazy pig, Lazy piggydap, Lazy sarang, Lazy snore, Lazy snoring, Lazy somerset, Lazy up, Lazy x, Lazy y, Lazy y1, Lazy y12, Lazy y123, Lazy y1234, Lazy yesANDno, Lazy yummy, Lazy z, Lazy z5, p3 back, p3 chinese, p3 equals, p3 helloWorld, p3 here123, p3 late4school, p3 lax, p3 not, p3 ouch, p3 pain, p3 pig, p3 piggydap, p3 snore, p3 snoring, p3 up
5000
6125 - Typed, Uses :: ONE clause with TWO synonym
if if1; variable v;
Select <if1> such that Uses(if1, v)
4, 12, 17, 41, 49, 79, 80, 81, 83, 85, 87, 101, 117, 120, 133
5000
6125 - Typed, Uses :: ONE clause with TWO synonym
if if1; variable v;
Select if1 such that Uses(if1, v)
4, 12, 17, 41, 49, 79, 80, 81, 83, 85, 87, 101, 117, 120, 133
5000
6126 - Typed, Uses :: ONE clause with TWO synonym
if if1;
Select if1 such that Uses(if1, "noANDyes")
12, 79, 80, 81, 83
5000
7101 - Modifies, Typed, ImplStmtLine :: Modifies with one clause, NO synonym
stmt s1;
Select s1 such that Modifies(_,"yesANDno")
none
5000
7111 - Modifies :: Modifies with one clause, ONE synonym
stmt s;
Select s such that Modifies(s, "piggydap")
128,127,101,102,116,117,24,26,29,30,32,34,36,38,41,43,44,45,46,47,56,58,59,61,63,65,79,80,81,82,83,84,85,86,95
5000
7112 - Modifies :: Modifies with one clause, ONE synonym
stmt s;
Select s such that Modifies(s, "chinese")
31, 29, 24, 26
5000
7113 - Modifies :: Modifies with one clause, ONE synonym
assign a;
Select a such that Modifies(a,"aAbBcCdD")
72
5000
7114 - Modifies :: Modifies with one clause, ONE synonym, With clause
stmt s;
Select s such that Modifies(s, "y1234") with s.stmt# = 10
10
5000
7121 - Modifies :: Modifies with one clause, TWO synonym
assign a1; variable v2;
Select <a1,v2> such that Modifies(a1, v2)
1 x,10 y1234,100 equal99,103 x,105 c3,106 somerset,108 d4,109 yeah,110 snore,111 year,112 total,113 prog1,114 somerset,115 pig,118 prog1,119 equal99,121 back,122 lax,124 here123,125 helloWorld,126 not,128 piggydap,129 equals,13 a2b3c,130 annyeong,134 up,135 pig,137 back,138 a,14 korean,15 hello,16 yesANDno,18 here123,19 mnop,2 y,20 abcd,21 z5,22 z5,23 yesANDNo,25 a2b3c,27 abcd,28 efgh,3 z,31 chinese,33 english,35 happy,37 a2b3c,39 lalala,40 yesANDno,42 f123g,48 gf456,5 home,50 z5,51 y1234,52 noANDyes,53 yummy,54 back,55 hungry,57 mnop,6 c8g,60 lalala,62 mnop,64 happy,67 abcd,69 egg99,7 y1,70 noandyes,71 efgh,72 aAbBcCdD,73 AaBbCcDd,74 d7ia,75 d7ib,76 d7ic,77 d7id,78 d7ie,8 y12,88 AaBbCcDd,89 z,9 y123,90 gf456,91 aA12345bB,92 yummy,93 mnop,94 v123abc45,96 a1,97 b2,98 c3,99 d4
5000
3301 - Modifies, Affects, Uses, Typed, ImplStmtLine 
stmt s1;
Select s1 such that Affects(99, 100) and Uses(115,"snore") and Modifies(88, "AaBbCcDd")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,  23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,  43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,  63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,  83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,  102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133,  134, 135, 136, 137, 138
5000
3502 - Modifies, Uses, Affects, Follows, Typed
while w1; assign a1, a2; variable v1;
Select BOOLEAN such that Modifies(w1, "egg99") and Parent(w1, a1) and Follows(a1,a2) and Uses(w1, v1) and Affects(57, 60)
false
5000
3311 - Affects, Typed, ImplStmtLine 
assign a1, a2;
Select <a1, a2> such that Affects(a1, 35) and Affects(27, a2) and Calls("Lazy", "Hardworking")
none
5000
3312 - Affects, Typed, ImplStmtLine 
assign a1, a2; 
Select a1 such that Affects(27, a1) and Affects(53, a2) and Modifies(a2, "lalala") 
none
5000
3511 - Typed, Modifies, Parent, Affects
assign a;
Select <a> such that Affects(a,64)
35, 64
5000
3511 - Typed, Modifies, Parent, Affects
while w1; assign a1, a2; variable v1;
Select <w1, a1, a2> such that Modifies(w1, "back") and Parent(w1, a1) and Follows(a1,a2) and Uses(w1, v1) and Affects(a1,64)
none
5000
3511 - Typed, Modifies, Parent, Affects
while w1; assign a1, a2; variable v1;
Select <w1, a1, a2> such that Modifies(w1, "back") and Parent(w1, a1) and Follows*(a1,a2) and Uses(w1, v1) and Affects(a1,64)
34 35 53, 34 35 54, 34 35 55
5000
3321 - Modifies, Uses, Affects :: More than 2 clauses
assign a1, a2;
Select <a1,a2> such that Affects(a1,a2) and Uses(a1, "sarang") and Modifies(a2, "hungry")
none
5000
3421 -  Typed, Modifies, Calls, Uses, Next, Affects
procedure pOne; assign a1, a2;
Select <pOne,a1,a2> such that Modifies(pOne, "mnop") and Uses(a1, "mnop") and Next(a1, a2) and Affects(a1, a2)
none
5000
3321 - Typed, Modifies, Parent, Affects
while w1; assign a1, a2;
Select w1 such that Modifies(w1, "back") and Parent(w1, a1) and Affects(a1,a2)
26, 29, 32, 34, 36, 38, 56, 63
5000
3421 - Typed, Modifies, Parent, Follows, Affects
while w1; assign a1, a2;
Select <w1, a1, a2> such that Modifies(w1, "back") and Parent(w1, a1) and Follows(a1,a2) and Affects(a1,a2)
29 72 73,38 39 40
5000
3521 - Typed, Modifies, Parent, Affects
while w1; assign a1, a2; variable v1;
Select <w1, a1, a2> such that Modifies(w1, "back") and Parent(w1, a1) and Follows(a1,a2) and Uses(w1, v1) and Affects(a1,a2)
29 72 73,38 39 40
5000
4301 - Calls :: More than 2 clauses, Chervina please help here: he says you never put quotes around lazy and hardworking
procedure p1; while w, w2;
Select p1 such that Calls("Lazy", "Hardworking") and Parent(w, 40) and Modifies(w2, "back")
Lazy, Hardworking, p3, p4
5000
4302 - Calls :: More than 2 clauses
procedure sleepy, gangbang;
Select <sleepy, gangbang> such that Calls(sleepy, "Hardworking") and Calls("Hardworking", gangbang) and Calls(gangbang, sleepy)
none
5000
4411 - Calls
procedure p1;
Select p1 such that Calls(p1, "Hardworking") and Calls(p1, "Lazy") and Calls(p1, "p3") and Calls(p1, "p4")
none
5000
4321 - Calls :: More than 2 clauses
procedure sleepy, gangbang; if if1;
Select <sleepy, gangbang, if1> such that Calls(gangbang, sleepy) and Modifies(if1, "back") and Uses(if1, "back")
Hardworking Lazy 101,Hardworking Lazy 41,Hardworking Lazy 79,Hardworking Lazy 80,Hardworking Lazy 81,Hardworking Lazy 83,Hardworking Lazy 85,p3 Hardworking 101,p3 Hardworking 41,p3 Hardworking 79,p3 Hardworking 80,p3 Hardworking 81,p3 Hardworking 83,p3 Hardworking 85,p3 Lazy 101,p3 Lazy 41,p3 Lazy 79,p3 Lazy 80,p3 Lazy 81,p3 Lazy 83,p3 Lazy 85,p4 p3 101,p4 p3 41,p4 p3 79,p4 p3 80,p4 p3 81,p4 p3 83,p4 p3 85
5000
4322 - Calls
procedure p1, p2; while w1, w2;
Select <p1,p2, w1> such that Calls(p1, p2) and Modifies(w1, "back") and Modifies(p2, "back")
Hardworking p3 116,Hardworking p3 24,Hardworking p3 26,Hardworking p3 29,Hardworking p3 32,Hardworking p3 34,Hardworking p3 36,Hardworking p3 38,Hardworking p3 56,Hardworking p3 63,Lazy Hardworking 116,Lazy Hardworking 24,Lazy Hardworking 26,Lazy Hardworking 29,Lazy Hardworking 32,Lazy Hardworking 34,Lazy Hardworking 36,Lazy Hardworking 38,Lazy Hardworking 56,Lazy Hardworking 63,Lazy p3 116,Lazy p3 24,Lazy p3 26,Lazy p3 29,Lazy p3 32,Lazy p3 34,Lazy p3 36,Lazy p3 38,Lazy p3 56,Lazy p3 63
5000
2201 - Follows, Typed, ImplStmtLine :: Follows with one clause, NO synonym
procedure p;
Select p such that Follows(125, 126) and Follows(24,95)
Hardworking,Lazy,p3,p4
5000
2401 - Follows, Typed, ImplStmtLine :: Follows with one clause, NO synonym
procedure p;
Select p such that Follows(125, 126) and Follows(24,95) and Modifies(14, "korean") and Calls(Hardworking, Lazy) 
none
5000
2402 - Follows, Typed, ImplStmtLine :: WHY FAIL? Follows with one clause, NO synonym :cause you never put quotes around hardworking and lazy
procedure p;
Select p such that Follows(125, 126) and Follows(24,95) and Modifies(14, "korean") and Calls("Lazy", "Hardworking") 
Hardworking,Lazy,p3,p4
5000
2211 - Follows, Typed, ImplStmtLine :: 
stmt s1;
Select s1 such that Follows(79, s1) and Follows(s1,95) 
none
5000
2212 - Follows, Typed, ImplStmtLine::
stmt s1;
Select s1 such that Follows*(79, s1) and Follows*(s1,95)
none
5000
2213 - Follows, Typed, ImplStmtLine::
stmt s1;
Select s1 such that Follows*(85, s1) and Follows(s1,95)
none
5000
2321 - Follows, Typed, ImplStmtLine, And-Tuple :: Follows query with 3 clauses
if if1; while w1; assign ass; calls c; 
Select <if1, w1, ass, c> such that Follows(w1, if1) and Follows(ass, c) and Follows(c, w1)
none
5000
2521 - Follows, Typed, ImplStmtLine, And-Tuple :: Follows query with 5 clauses
stmt s1, s2; while w; if if1;
Select <s1, w, if1, s2> such that Modifies(s1, "y1234") and Parent(if1, s2) and Modifies(s2, "hello") and Parent(w, if1) and Follows(s1, w)
10 11 12 15
5000
2322 - Follows, Typed, ImplStmtLine, And-Tuple :: Follows query, With clause
stmt s1, s2, s3, s4;
Select <s1, s2, s3, s4> such that Follows(s1, s2) and Follows(s2, s3) and Follows(s3, s4) with s1.stmt# = 74
74 75 76 77
5000
2421 - Follows, Typed, ImplStmtLine, And-Tuple :: Follows query, With clause
stmt s1, s2, s3, s4, s5;
Select <s1, s2, s3, s4, s5> such that Follows(s1, s2) and Follows(s2, s3) and Follows(s3, s4) and Follows(s4, s5) with s1.stmt# = 74
74 75 76 77 78
5000
2521 - Follows, Typed, ImplStmtLine, And-Tuple :: Follows query, With clause
procedure p; while w; if if1, if2, if3; prog_line n;
Select <p, w, if1, if2, if3, n> such that Calls(p, "Hardworking") and Calls(p, "p3") and Parent(w, if1) and Follows(if1, if2) and Follows(if2, if3) with if3.stmt# = n and n = 81
none
5000
7301 - Modifies, Typed, ImplStmtLine :: Modifies query with three clauses, NO synonym
stmt s1;
Select s1 such that Affects(7, 10) and Uses(54,"korean") and Modifies(14, "korean")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,  23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,  43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,  63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,  83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,  102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133,  134, 135, 136, 137, 138
5000
7311 - Modifies, Typed, ImplStmtLine :: Modifies query with three clauses, NO synonym
stmt s1; stmt s2; assign a1;
Select <a1, s1, s2> such that Affects(a1, 14) and Uses(s1,"korean") and Modifies(s2, "korean")
none
5000
7511 - Typed, Modifies, Parent, Affects
while w1; assign a1, a2; variable v1;
Select <w1, a1, a2> such that Parent(w1, a1) and Follows(a1,a2) and Uses(w1, v1) and Affects(a1,a2) and Modifies(w1, "back")
29 72 73,38 39 40
5000
7411 - Typed, Modifies, Parent, Uses :: With Clause
procedure p; while w; if if1; stmt s;
Select <p, w, if1, s> such that uses(p, "annyeong") and Parent(w, if1) and Parent(if1, s) and modifies(s, "korean") with p.procName = "Lazy" and s.stmt# = 14
none
5000
7412 - Typed, Modifies, Parent, Uses :: With Clause
procedure p; while w; if if1; stmt s; prog_line n;
Select <p, w, if1, s, n> such that Calls(p, "Hardworking") and Parent(w, if1) and Parent(if1, s) and Modifies(s, "f123g") with p.procName = "Lazy" and n = s.stmt# and n = 42
Lazy 38 41 42 42
5000
7312 - Typed, Modifies
procedure pOne; while ww;
Select <pOne,ww> such that Modifies(pOne,"happy") and Uses(ww,"korean") and Modifies(pOne,"korean")
Lazy 24,Lazy 26,Lazy 29,Lazy 32,Lazy 34
5000
7412 - Typed, Modifies, Calls, Uses, With, With-And 
procedure pOne, pTwo; while ww; 
Select <pOne,ww> such that Modifies(pOne,"happy") and Uses(ww,"korean") and Modifies(pOne,"korean") and Calls(pOne, pTwo) with pTwo.procName = "Hardworking"
Lazy 24,Lazy 26,Lazy 29,Lazy 32,Lazy 34
5000
5301 - Next
stmt s1;
Select s1 such that Next(25, 26) and Next(99, 100) and Next(34, 36)
none
5000
5302 - Next
stmt s1; while w1;
Select s1 such that Modifies(_,"yesANDno") and Uses(w1, _) and Next(108, 109)
none
5000
5202 - Follows

Select BOOLEAN such that Follows(2, 1) and Next(125,124)
false
5000
5311 - Next :: Don't get why 7 y1 is not the only answer. AutoTester gave a lot of results
stmt s1; variable v1;
Select <s1, v1> such that Next(5, s1) and Modifies(s1, v1) and Uses(10, "y")
7 y1
5000
5111 - Next :: why autotester returns so much stuff..... need to extend it to more than 2 clauses after debugging
stmt s1;
Select s1 such that Next(s1, 53)
36
5000
5421 - Next
while ww; assign a1; if if1; call cc; stmt s1;
Select <ww, a1, if1, cc, s1> such that Next(ww,a1) and Next(ww, if1) and Next(ww, cc) and Next(ww, s1)
none
5000
5221 - Next
while ww; assign a1;
Select <a1, ww> such that Next(a1, ww) and Modifies(a1, "happy") 
35 36
5000
5321 - Next
while ww; assign a1; variable v1;
Select <ww, a1, v1> such that Next(ww, a1) and Modifies(a1, "happy") and Uses(ww, v1)
34 35 happy,63 64 happy, 34 35 a1,34 35 abcd,34 35 b2,34 35 back,34 35 c3,34 35 chinese,34 35 d4,34 35 efgh,34 35 english,34 35 equals,34 35 f123g,34 35 helloWorld,34 35 here123,34 35 korean,34 35 lalala,34 35 late4school,34 35 lax,34 35 mnop,34 35 not,34 35 ouch,34 35 pain,34 35 pig,34 35 piggydap,34 35 snore,34 35 snoring,34 35 somerset,34 35 up,34 35 x,34 35 y1,34 35 y12,34 35 y123,34 35 y1234,34 35 yummy,34 35 z5,63 64 abcd,63 64 back,63 64 chinese,63 64 equals,63 64 helloWorld,63 64 here123,63 64 late4school,63 64 lax,63 64 mnop,63 64 not,63 64 ouch,63 64 pain,63 64 pig,63 64 piggydap,63 64 snore,63 64 snoring,63 64 up,63 64 y1
5000
5322 - Next
while ww; assign a1; variable v1;
Select <ww, a1, v1> such that Next(ww, a1) and Uses(a1, "happy") and Modifies(a1, v1)
63 64 happy
5000
1401 - Parent, ImplStmtLine, Typed, And-Tuple 
stmt s1;
Select s1 such that Parent(4,6) and Parent(24, 26) and Modifies(26, "efgh") and Follows(11,23)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
5000
1211 - Parent, ImplStmtLine, Typed, And-Tuple
while w1; if if1;
Select w1 such that Modifies(26, "y12") and Parent(24, if1)
none
5000
1501 - Parent
while w1;
Select w1 such that Parent(_,_) and Modifies(_,_) and Uses(_,_) and Follows(_,_) and Calls(_,_)
none
5000
1311 - Parent, Uses, ImplStmt
stmt s1; while w1;
Select s1 such that Parent(w1, 26) and Modifies(w1, "a2b3c") and Uses(w1,"chinese")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
5000
1312 - Parent
while w1;
Select w1 such that Parent(w1, 26) and Modifies(w1, "a2b3c") and Uses(w1,"chinese")
24
5000
1321 - Parent, ImplStmtLine, Typed, And-Tuple 
while w1; variable v1; assign a1;
Select <w1, v1, a1> such that Modifies(w1, v1) and Modifies(a1, v1) and Parent(w1, a1)
104 c3 105,107 d4 108,11 z5 21,11 z5 22,127 piggydap 128,24 a2b3c 25,26 abcd 27,26 efgh 28,29 AaBbCcDd 73,29 aAbBcCdD 72,29 chinese 31,29 d7ia 74,29 d7ib 75,29 d7ic 76,29 d7id 77,29 d7ie 78,32 efgh 71,32 english 33,32 noandyes 70,34 back 54,34 happy 35,34 hungry 55,34 yummy 53,36 a2b3c 37,36 noANDyes 52,38 lalala 39,38 yesANDno 40,56 lalala 60,56 mnop 57,56 mnop 62,63 happy 64,66 abcd 67,68 egg99 69
5000
1421 - Parent, ImplStmtLine, Typed, And-Tuple
stmt s1; variable v1; if if1;
Select <s1,v1,if1> such that Modifies(s1,v1) and Modifies(if1, "somerset") and Parent(s1, if1) and Parent(if1,s1)
none
5000
1422 - Parent, ImplStmtLine, Typed, And-Tuple :: With Clause
procedure p; while w1, w2, w3; if if1;
Select <p, w1, w2, w3, if1> such that calls(p, "Hardworking") and Parent(w1, w2) and Parent(w2, w3) and Parent(w3, if1) with p.procName = "Lazy" and w1.stmt# = 53
none
5000
1322 - Parent, ImplStmtLine, Typed, And-Tuple :: With Clause
while w; if if1; stmt s;
Select <w, if1, s> such that Parent(w, if1) and Parent(if1, s) and Modifies(s,"a2b3c") with s.stmt# = 13
11 12 13
5000
1521 - Parent, Typed, ImplStmtLine, And-Tuple :: Follows query, With clause
procedure p; while w; if if1, if2, if3; prog_line n;
Select <p, w, if1, if2, if3, n> such that Calls(p, "Hardworking") and Calls(p, "p3") and Parent(w, if1) and Parent(if1, if2) and Parent(if2, if3) with n = if3.stmt# and n = 81
Lazy 29 79 80 81 81
5000
1323 - Uses, ImplStmtLine, Typed, And-Tuple :: with Clause
procedure p; while w; stmt s;
Select <p, w, s> such that Parent(w, s) and Modifies(s, "z5") and Uses(s, "z5") with p.procName = "Lazy" and s.stmt#=22
Lazy 11 22
5000
1522 - Uses, ImplStmtLine, Typed, And-Tuple :: with Clause
procedure p; while w; if if1; stmt s; prog_line n;
Select <p, w, if1, s, n> such that Calls(p, "Hardworking") and Parent(w, if1) and Parent(if1, s) and Modifies(s, "f123g") and Uses(s, "f123g") with p.procName = "Lazy" and s.stmt# = n and n = 42
none
5000
8101 - Pattern
assign a;
Select a pattern a("a", _ )
138
5000
8102 - Pattern
assign a;
Select a pattern a("yesANDNo", _ )
23
5000
8103 - Pattern :: CHANGE NUMBER
assign a;
Select a pattern a("yesANDno", _ )
16, 40
5000
8104 - Pattern
while w;
Select w pattern w("yesANDno", _ )
24
5000
8105 - Pattern
assign a; while w;
Select a pattern w("yesANDno", _ )
1,2,3,5,6,7,8,9,10,13,14,15,16,18,19,20,21,22,23,25,27,28,31,33,35,37,39,40,42,48,50,51,52,53,54,55,57,60,62,64,67,69,70,71,72,73,74,75,76,77,78,88,89,90,91,92,93,94,96,97,98,99,100,103,105,106,108,109,110,111,112,113,114,115,118,119,121,122,124,125,126,128,129,130,134,135,137,138
5000
8106 - Pattern
assign a; while w;
Select a pattern w("yesANDnoo", _ )
none
5000
8201 - Pattern, Parent
assign a; while w;
Select <w, a> such that Parent(w, a) pattern w("yesANDno", _ ) and a("yesANDno", _ )
none
5000
8202 - Pattern, ParentStar
assign a; while w;
Select <w, a> such that Parent*(w, a) pattern w("yesANDno", _ ) and a("yesANDno", _ )
24 40
5000
8101 - Pattern
assign a;
Select a pattern a("yesANDno", "lalala - y12 + f123g + english - happy")
40
5000
8102 - Pattern
assign a;
Select a pattern a("yesANDno", _"lalala - y12 + f123g + english - happy"_)
40
5000
8103 - Pattern
assign a;
Select a pattern a("yesANDno", "y12 + f123g + english - happy")
none
5000
8104 - Pattern
assign a;
Select a pattern a("yesANDno", _"y12 + f123g + english - happy")
none
5000
8105 - Pattern
assign a;
Select a pattern a("yesANDno", "y12 + f123g + english - happy"_)
none
5000
8107 - Pattern
assign a;
Select a pattern a("yesANDno", _"y12 + f123g + english - happy"_)
none
5000
8108 - Pattern
assign a;
Select a pattern a("yesANDno", "lalala - y12 + f123g + english")
none
5000
8109 - Pattern
assign a;
Select a pattern a("yesANDno", _"lalala - y12 + f123g + english")
none
5000
81010 - Pattern
assign a;
Select a pattern a("yesANDno", "lalala - y12 + f123g + english_")
none
5000
81011 - Pattern
assign a;
Select a pattern a("yesANDno", _"lalala - y12 + f123g + english"_)
40
5000
81012 - Pattern
assign a;
Select a pattern a("yesANDno", _"lalala - y12 + f123g"_)
40
5000
8221 - Pattern, Parent
while w; assign a;
Select <w, a> such that Parent(w, a) pattern a("yesANDno", _"lalala - y12 + f123g"_)
38 40
5000
8222 - Pattern, ParentStar
while w; assign a;
Select <w, a> such that Parent*(w, a) pattern a("yesANDno", _"lalala - y12 + f123g"_)
24 40, 26 40, 29 40, 32 40, 34 40, 36 40, 38 40
5000
8223 - Pattern, ParentStar
while w; assign a;
Select <w, a> such that Parent*(w, a) pattern a(_, _"lalala - y12 + f123g"_)
24 40, 26 40, 29 40, 32 40, 34 40, 36 40, 38 40
5000
8224 - Pattern, ParentStar
while w; assign a;
Select <w, a> such that Parent*(w, a) pattern w("yesANDno", _) and a(_, _"lalala - y12 + f123g"_)
24 40
5000
8225 - Pattern, ParentStar
while w; assign a;
Select <w, a> such that Parent*(w, a) pattern w("yesANDnoo", _) and a(_, _"lalala - y12 + f123g"_)
none
5000
8226 - Pattern, ParentStar
while w; assign a1, a2;
Select <w, a1, a2> such that Parent*(w, a1) and Parent*(w, a2) pattern w("yesANDno", _) and a1(_, _"english + chinese"_) and a2(_, _"lalala - y12 + f123g"_)
24 39 40
5000
8227 - Pattern, ParentStar
while w; assign a1, a2;
Select <w, a1, a2> such that Parent*(w, a1) and Parent*(w, a2) pattern w("yesANDno", _) and a1(_, _"lalala - y12 + f123g"_) and a2(_, _"lalala - y12 + f123g"_)
24 40 40
5000
8228 - Pattern, ParentStar
while w; assign a1, a2;
Select <w, a1, a2> such that Parent*(w, a1) and Parent*(w, a2) pattern w("yesANDno", _) and a1(_, _"noANDyes"_) and a2(_, _"noANDyes"_)
24 91 91
5000
8229 - Pattern, ParentStar
while w1, w2; assign a1, a2;
Select <w1, a1, w2, a2> such that Parent*(w1, a1) and Parent*(w2, a2) pattern a1(_, _"noANDyes"_) and a2(_, _"noANDyes"_)
11 16 11 16, 11 16 24 91, 11 16 26 91, 11 16 29 91, 24 91 11 16, 24 91 24 91, 24 91 26 91, 24 91 29 91, 26 91 11 16, 26 91 24 91, 26 91 26 91, 26 91 29 91, 29 91 11 16, 29 91 24 91, 29 91 26 91, 29 91 29 91
5000
82210 - Pattern, ParentStar
while w1, w2; assign a1, a2;
Select <a1, a2> such that Parent*(w1, a1) and Parent*(w2, a2) pattern a1(_, _"noANDyes"_) and a2(_, _"noANDyes"_)
16 16, 16 91, 91 16, 91 91
5000
82211 - Pattern, ParentStar
while w1, w2; assign a1, a2;
Select <w1, a1, w2, a2> such that Parent*(w1, a1) and Parent*(w2, a2) pattern w1("yesANDno", _) and w2("yesANDno", _) and a1(_, _"noANDyes"_) and a2(_, _"noANDyes"_)
24 91 24 91
5000
8321 - Pattern, ParentStar
while w; if if1; assign a1, a2;
Select <w, if1, a1, a2> such that Parent*(w, if1) and Parent*(w, a1) and Parent*(w, a2) pattern w("yesANDno", _) and a1(_, _"noANDyes"_) and a2(_, _"noANDyes"_)
24 41 91 91, 24 49 91 91, 24 79 91 91, 24 80 91 91, 24 81 91 91, 24 83 91 91, 24 85 91 91, 24 87 91 91
5000
cat: All Category
5223 - Next, Affects, Typed, ImplStmtLine :: Parent, Modifies query with two clauses, TWO synonyms
assign a1, a2;
Select <a1,a2> such that Next(a1,a2) and Affects(a1,a2)
7 8,8 9,9 10,21 22,39 40,72 73,99 100
5000
7223 - Modifies, Uses, Typed, ImplStmtLine :: Modifies, Uses query with two clauses, TWO synonyms
procedure p; variable v;
Select <p,v> such that Modifies(p,v) and Uses(p,v)
Lazy a1,Lazy aAbBcCdD,Lazy abcd,Lazy annyeong,Lazy b2,Lazy back,Lazy c3,Lazy c8g,Lazy chinese,Lazy d4,Lazy d7ia,Lazy d7ib,Lazy d7ic,Lazy d7id,Lazy d7ie,Lazy efgh,Lazy egg99,Lazy english,Lazy equals,Lazy f123g,Lazy gf456,Lazy happy,Lazy helloWorld,Lazy here123,Lazy hungry,Lazy korean,Lazy lalala,Lazy lax,Lazy mnop,Lazy noANDyes,Lazy not,Lazy pig,Lazy piggydap,Lazy snore,Lazy somerset,Lazy up,Lazy x,Lazy y,Lazy y1,Lazy y12,Lazy y123,Lazy y1234,Lazy yesANDno,Lazy yummy,Lazy z,Lazy z5,Hardworking a1,Hardworking b2,Hardworking back,Hardworking c3,Hardworking d4,Hardworking equals,Hardworking helloWorld,Hardworking here123,Hardworking lax,Hardworking not,Hardworking pig,Hardworking piggydap,Hardworking snore,Hardworking somerset,Hardworking up,Hardworking x,p3 back,p3 equals,p3 helloWorld,p3 here123,p3 lax,p3 not,p3 pig,p3 piggydap,p3 up
5000
7212 - Modifies, Uses, Typed, ImplStmtLine :: Modifies, Uses query with two clauses, ONE synonym
assign a;
Select a such that Modifies(a, _) and Uses(a, _)
6,7,8,9,10,14,15,16,18,19,20,22,33,37,39,40,48,51,52,54,55,60,62,64,69,70,71,73,89,90,91,92,93,94,100,105,108,110,112,113,115,119,121,122,125,128,129,130,134,137
5000
7224 - Modifies, Uses, Typed, ImplStmtLine :: Modifies, Uses query with two clauses, TWO synonyms
assign a; variable v;
Select <a,v> such that Modifies(a,v) and Uses(a,v)
10 y1234,22 z5,64 happy,105 c3,134 up
5000
4323 - Calls, Uses, Typed, ImplStmtLine :: Calls, Uses query with two clauses, TWO synonyms
procedure p1, p2; variable v;
Select <p1,p2,v> such that Calls(p1,p2) and Uses(p1,v) and Uses(p1,v)
Lazy Hardworking d7ic,Lazy Hardworking d7id,Lazy Hardworking d7ie,Lazy Hardworking efgh,Lazy Hardworking egg99,Lazy Hardworking english,Lazy Hardworking equals,Lazy Hardworking f123g,Lazy Hardworking gf456,Lazy Hardworking ha99y,Lazy Hardworking haeyo,Lazy Hardworking happy,Lazy Hardworking helloWorld,Lazy Hardworking here123,Lazy Hardworking hungry,Lazy Hardworking korean,Lazy Hardworking lalala,Lazy Hardworking late4school,Lazy Hardworking lax,Lazy Hardworking mnop,Lazy Hardworking noANDyes,Lazy Hardworking not,Lazy Hardworking ouch,Lazy Hardworking pain,Lazy Hardworking pig,Lazy Hardworking piggydap,Lazy Hardworking sarang,Lazy Hardworking snore,Lazy Hardworking snoring,Lazy Hardworking somerset,Lazy Hardworking up,Lazy Hardworking x,Lazy Hardworking y,Lazy Hardworking y1,Lazy Hardworking y12,Lazy Hardworking y123,Lazy Hardworking y1234,Lazy Hardworking yesANDno,Lazy Hardworking yummy,Lazy Hardworking z,Lazy Hardworking z5,Lazy p3 a1,Lazy p3 aAbBcCdD,Lazy p3 abcd,Lazy p3 annyeong,Lazy p3 b2,Lazy p3 back,Lazy p3 c3,Lazy p3 c8g,Lazy p3 chinese,Lazy p3 d4,Lazy p3 d7ia,Lazy p3 d7ib,Lazy p3 d7ic,Lazy p3 d7id,Lazy p3 d7ie,Lazy p3 efgh,Lazy p3 egg99,Lazy p3 english,Lazy p3 equals,Lazy p3 f123g,Lazy p3 gf456,Lazy p3 ha99y,Lazy p3 haeyo,Lazy p3 happy,Lazy p3 helloWorld,Lazy p3 here123,Lazy p3 hungry,Lazy p3 korean,Lazy p3 lalala,Lazy p3 late4school,Lazy p3 lax,Lazy p3 mnop,Lazy p3 noANDyes,Lazy p3 not,Lazy p3 ouch,Lazy p3 pain,Lazy p3 pig,Lazy p3 piggydap,Lazy p3 sarang,Lazy p3 snore,Lazy p3 snoring,Lazy p3 somerset,Lazy p3 up,Lazy p3 x,Lazy p3 y,Lazy p3 y1,Lazy p3 y12,Lazy p3 y123,Lazy p3 y1234,Lazy p3 yesANDno,Lazy p3 yummy,Lazy p3 z,Lazy p3 z5,Hardworking p3 a1,Hardworking p3 b2,Hardworking p3 back,Hardworking p3 c3,Hardworking p3 chinese,Hardworking p3 d4,Hardworking p3 equals,Hardworking p3 happy,Hardworking p3 helloWorld,Hardworking p3 here123,Hardworking p3 late4school,Hardworking p3 lax,Hardworking p3 not,Hardworking p3 ouch,Hardworking p3 pain,Hardworking p3 pig,Hardworking p3 piggydap,Hardworking p3 snore,Hardworking p3 snoring,Hardworking p3 somerset,Hardworking p3 up,Hardworking p3 x,Lazy Hardworking a1,Lazy Hardworking aAbBcCdD,Lazy Hardworking abcd,Lazy Hardworking annyeong,Lazy Hardworking b2,Lazy Hardworking back,Lazy Hardworking c3,Lazy Hardworking c8g,Lazy Hardworking chinese,Lazy Hardworking d4,Lazy Hardworking d7ia,Lazy Hardworking d7ib,p3 p4 back,p3 p4 chinese,p3 p4 equals,p3 p4 helloWorld,p3 p4 here123,p3 p4 late4school,p3 p4 lax,p3 p4 not,p3 p4 ouch,p3 p4 pain,p3 p4 pig,p3 p4 piggydap,p3 p4 snore,p3 p4 snoring,p3 p4 up
5000
4324 - Calls, CallsStar, Typed, ImplStmtLine :: Calls, CallsStar query with two clauses, TWO synonyms
procedure p1, p2;
Select <p1,p2> such that Calls(p1,p2) and Calls*(p1,p2)
Hardworking p3,Lazy Hardworking,Lazy p3,p3 p4
5000
5221 - NextStar, Follows, Typed, ImplStmtLine :: NextStar, Follows query with two clauses, TWO synonyms
if if1; while w;
Select <if1, w> such that Next*(if1,w) and Follows(if1,w)
none
5000
5321 - Next, Affects, Modifies, Follows, ImplStmtLine
assign a1, a2;
Select <a1,a2> such that Next(a1, a2) and Affects(a1,a2) and Follows(a1, a2)
21 22, 39 40, 7 8, 72 73, 8 9, 9 10, 99 100
5000
5322 - Next, Affects, Modifies, Follows, ImplStmtLine :: swapped a1 and a2 positions
assign a1, a2;
Select <a1,a2> such that Next(a1, a2) and Affects(a1,a2) and Follows(a2, a1)
none
5000
5421 - Next, Affects, Modifies, Uses
assign a1, a2; variable v;
Select <a1, a2, v> such that Next(a1, a2) and Affects(a1,a2) and Modifies(a1, v) and Uses(a1, v)
none
5000
5422 - Next, Affects, Modifies, Uses
assign a1, a2;
Select <a1, a2> such that Next*(a1, a2) and Affects(a1,a2) and Modifies(a1, "happy") and Uses(a2, "happy")
35 40, 35 64, 64 64
5000
5423 - Next, Affects, Modifies, Uses :: swapped a2 and a1 positions
assign a1, a2; 
Select <a1, a2> such that Next*(a1, a2) and Affects(a2, a1) and Modifies(a2, "happy") and Uses(a2, "happy")
64 64
5000
4321 - Calls, Modifies, Uses
procedure p1, p2;
Select <p1, p2> such that Calls(p1, p2) and Modifies(p1, "gf456") and Uses(p2, "yummy")
none
5000
81013 - Pattern
assign a;
Select a pattern a("abcdefghijklmnopqrstuvwxyz", _ )
none
5000
81014 - Pattern
assign a;
Select a pattern a("ABCDEFGHIJKLMNOPQRSTUVWXYZ", _ )
none
5000
81015 - Pattern
assign a;
Select a pattern a(_, _"abcdefghijklmnopqrstuvwxyz"_)
none
5000
81016 - Pattern
assign a;
Select a pattern a(_, _"ABCDEFGHIJKLMNOPQRSTUVWXYZ"_)
none
5000
81017 - Pattern
assign a;
Select a pattern a("123456789", _ )
none
5000
81018 - Pattern
assign a;
Select a pattern a(_, _"123456789"_)
21
5000
9007 - Typed :: No Relation, No Clause, NO synonym
assign a; procedure p;
Select a with p.procName = "Lazy"
1,2,3,5,6,7,8,9,10,13,14,15,16,18,19,20,21,22,23,25,27,28,31,33,35,37,39,40,42,48,50,51,52,53,54,55,57,60,62,64,67,69,70,71,72,73,74,75,76,77,78,88,89,90,91,92,93,94,96,97,98,99,100,103,105,106,108,109,110,111,112,113,114,115,118,119,121,122,124,125,126,128,129,130,134,135,137,138
5000
9008 - Typed :: No Relation, No Clause, NO synonym
assign a; procedure p;
Select a with p.procName = "lazy"
none
5000
9009 - Typed :: No Relation, No Clause, NO synonym
assign a; call c;
Select a with c.procName = "Lazy"
none
5000
90010 - Typed :: No Relation, No Clause, NO synonym
assign a; call c;
Select c with c.procName = "Lazy"
none
5000
214 - Next ::
stmt s;
Select s such that Next (136, s)
none
5000
215 - Modified ::
variable v;
Select v such that Modifies(136, v)
a
5000
216 - Pattern ::
assign a;
Select a pattern a("a", "1")
138
5000