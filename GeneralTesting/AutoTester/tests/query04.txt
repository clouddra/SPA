116
cat: All Category
1 - Parent ::
stmt s, s1;
Select s such that Parent (s, s1) with s1.stmt#= 3
none
5000
2 - Parent ::
stmt s, s1;
Select s such that Parent (s, s1) with s1.stmt#= 11
9
5000
3 - Parent ::
stmt s, s1;
Select s such that Parent (s, s1) with s1.stmt#= 13
11
5000
4 - Parent ::
stmt s, s1;
Select s such that Parent (s, s1) with s1.stmt#= 21
19
5000
5 - Parent ::
stmt s;
Select s such that Parent (s, 3)
none
5000
6 - Parent ::
stmt s;
Select s such that Parent (s, 13)
11
5000
7 - Parent ::
stmt s;
Select s such that Parent (s, 15)
11
5000
8 - Parent ::
stmt s;
Select s such that Parent (s, 22)
19
5000
9 - Parent ::
stmt s;
Select s such that Parent (2, s)
none
5000
10 - Parent ::
stmt s;
Select s such that Parent (9, s)
10, 11, 17
5000
11 - Parent ::
stmt s;
Select s such that Parent (10, s)
none
5000
12 - Parent ::
stmt s;
Select s such that Parent (11, s)
12, 13, 14, 15, 16
5000
13 - ParentStar ::
stmt s;
Select s such that Parent* (s, 2)
none
5000
14 - ParentStar ::
stmt s;
Select s such that Parent* (s, 10)
9
5000
15 - ParentStar ::
stmt s;
Select s such that Parent* (s, 15)
11, 9
5000
16 - ParentStar ::
stmt s;
Select s such that Parent* (s, 21)
19
5000
17 - ParentStar ::
while w;
Select w such that Parent* (w, 2)
none
5000
18 - ParentStar ::
while w;
Select w such that Parent* (w, 10)
9
5000
19 - ParentStar ::
while w;
Select w such that Parent* (w, 13)
9
5000
20 - ParentStar ::
while w;
Select w such that Parent* (w, 17)
9
5000
21 - ParentStar ::
while w;
Select w such that Parent* (w, 22)
19
5000
22 - ParentStar ::
while w; stmt s;
Select s such that Parent* (w, 3)
none
5000
23 - ParentStar ::
while w; stmt s;
Select s such that Parent* (w, 10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
5000
24 - Follows ::
stmt s;
Select s such that Follows (s, 1)
none
5000
25 - Follows ::
stmt s;
Select s such that Follows (s, 3)
2
5000
26 - Follows ::
stmt s;
Select s such that Follows (s, 9)
8
5000
27 - Follows ::
stmt s;
Select s such that Follows (s, 10)
none
5000
28 - Follows ::
stmt s;
Select s such that Follows (s, 19)
none
5000
29 - Follows ::
assign a;
Select a such that Follows (a, 1)
none
5000
30 - Follows ::
assign a;
Select a such that Follows (a, 3)
2
5000
31 - Follows ::
assign a;
Select a such that Follows (a, 9)
8
5000
32 - Follows ::
assign a;
Select a such that Follows (a, 10)
none
5000
33 - Follows ::
assign a;
Select a such that Follows (a, 18)
none
5000
34 - FollowsStar ::
stmt s; while w;
Select w such that Follows* (s, w)
9
5000
35 - FollowsStar ::
stmt s; 
Select s such that Follows* (s, 2)
1
5000
36 - FollowsStar ::
stmt s; 
Select s such that Follows* (s, 10)
none
5000
37 - FollowsStar ::
stmt s; 
Select s such that Follows* (s, 11)
10
5000
38 - FollowsStar ::
stmt s; 
Select s such that Follows* (s, 21)
20
5000
39 - FollowsStar ::
if ifstat;
Select ifstat such that Follows* (ifstat, 10)
none
5000
40 - FollowsStar ::
if ifstat;
Select ifstat such that Follows* (ifstat, 17)
11
5000
41 - FollowsStar ::
assign a;
Select a such that Follows* (a, 4)
1, 2, 3
5000
42 - FollowsStar ::
assign a;
Select a such that Follows* (a, 5)
1, 2, 3, 4
5000
43 - FollowsStar ::
assign a;
Select a such that Follows* (a, 9)
1, 2, 3, 4, 6, 8
5000
44 - FollowsStar ::
assign a;
Select a such that Follows* (a, 17)
10
5000
45 - FollowsStar ::
assign a;
Select a such that Follows* (a, 22)
20
5000
46 - Modifies ::
variable v;
Select v such that Modifies (3, v)
y
5000
47 - Modifies ::
variable v;
Select v such that Modifies (5, v)
y, z
5000
48 - Modifies ::
variable v;
Select v such that Modifies (9, v)
e, i, x, y, z
5000
49 - Modifies ::
variable v;
Select v such that Modifies (11, v)
i, x, y, z
5000
50 - Modifies ::
while w;
Select w such that Modifies (w, "i")
9, 19
5000
51 - Modifies ::
while w;
Select w such that Modifies (w, "y")
9, 19, 27
5000
52 - Modifies ::
variable v;
Select v such that Modifies ("Mary", v)
z, i, y
5000
53 - Uses ::
stmt s;
Select s such that Uses (s, "i")
5, 9, 11, 16, 18, 19, 21, 22, 23, 27, 28
5000
54 - Uses ::
stmt s;
Select s such that Uses (s, "y")
4, 5, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 23, 27, 28, 30
5000
55 - Uses ::
variable v;
Select v such that Uses (10, v)
x, y
5000
56 - Uses ::
variable v;
Select v such that Uses (18, v)
d, e, i, x, y, z
5000
57 - Uses ::
assign a; variable v;
Select v such that Uses (a, v)
d, e, i, x, y, z
5000
58 - Uses, Modifies ::
assign a;
Select a such that Modifies (a, "i") and Uses (a, "i")
16, 22
5000
59 - Uses, Modifies ::
assign a;
Select a such that Modifies (a, "z") and Uses (a, "z")
25, 30
5000
60 - Parent, Modifies ::
assign a; while w;
Select a such that Modifies (a, "z") and Parent (w, a)
20, 25
5000
61 - Parent, Modifies ::
assign a; while w;
Select a such that Parent (w, a) and Modifies (a, "z")
20, 25
5000
62 - Parent, Modifies ::
assign a; while w;
Select a such that Modifies (a, "z") such that Parent (w, a)
20, 25
5000
63 - CallsStar ::
procedure p;
Select p such that Calls* (p, "John")
Bill, Mary
5000
64 - Calls, Modifies, Uses ::
procedure p;
Select p such that Calls ("Bill", p) and Modifies (p, "i") and Uses (p, "x")
Mary
5000
65 - Calls, Modifies ::
procedure p;
Select p such that Calls ("Bill", p) and Modifies (p, "y")
Mary, John
5000
66 - Pattern ::
assign a;
Select a pattern a ("y", _)
3, 12, 23, 29
5000
67 - Pattern ::
assign a;
Select a pattern a ("z", "2*x")
none
5000
68 - Pattern, While ::
assign a; while w;
Select a pattern a ("x" , _) such that Follows (w, a)
26
5000
69 - Pattern ::
assign a;
Select a pattern a (_, "y+1")
13
5000
70 - Pattern ::
assign a;
Select a pattern a (_, "x-y")
10
5000
71 - Pattern ::
assign a;
Select a pattern a (_, _"y*3+2"_)
none
5000
72 - Pattern ::
assign a;
Select a pattern a (_, _"y+e*d"_)
none
5000
73 - Pattern ::
assign a;
Select a pattern a (_, _"y+z"_)
12, 14, 17, 23
5000
74 - Pattern ::
assign a;
Select a pattern a (_, _"z+i"_)
none
5000
75 - Pattern ::
assign a;
Select a pattern a (_, _"2*x"_)
20
5000
76 - Pattern ::
assign a;
Select a pattern a (_, _"3+2"_)
none
5000
77 - Typed ::
stmt s; constant c;
Select s with s.stmt# = c.value
1, 2, 3, 4, 5, 10, 12
5000
78 - ReturnBoolean, Pattern ::
constant c; if ifstat;
Select BOOLEAN pattern ifstat("i", _, _) with c.value = 10
true
5000
79 - Next ::
prog_line n2;
Select n2 such that Next (1, n2)
2
5000
80 - Next ::
prog_line n2;
Select n2 such that Next (9, n2)
10, 18
5000
81 - Next ::
prog_line n2;
Select n2 such that Next (11, n2)
12, 14
5000
82 - Next ::
prog_line n2;
Select n2 such that Next (13, n2)
17
5000
83 - Next ::
prog_line n2;
Select n2 such that Next (15, n2)
16
5000
84 - Next ::
prog_line n2;
Select n2 such that Next (17, n2)
9
5000
85 - Next ::
prog_line n2;
Select n2 such that Next (18, n2)
none
5000
86 - Next ::
prog_line n1;
Select n1 such that Next (n1, 1)
none
5000
87 - Next ::
prog_line n1;
Select n1 such that Next (n1, 9)
8, 17
5000
88 - Next ::
prog_line n1;
Select n1 such that Next (n1, 10)
9
5000
89 - Next ::
prog_line n1;
Select n1 such that Next (n1, 17)
13, 16
5000
90 - Next ::
prog_line n1;
Select n1 such that Next (n1, 18)
9
5000
91 - Next ::
prog_line n1;
Select n1 such that Next (n1, 19)
22
5000
92 - NextStar ::
prog_line n;
Select n such that Next* (10, n) and Next* (n, 9)
9, 10, 11, 12, 13, 14, 15, 16, 17
5000
93 - NextStar ::
prog_line n;
Select n such that Next* (n, n)
9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30
5000
94 - Affects, ReturnBoolean ::

Select BOOLEAN such that Affects (1, 2)
true
5000
95 - Affects, ReturnBoolean ::

Select BOOLEAN such that Affects (1, 3)
true
5000
96 - Affects, ReturnBoolean ::

Select BOOLEAN such that Affects (1, 5)
false
5000
97 - Affects, ReturnBoolean ::

Select BOOLEAN such that Affects (2, 6)
true
5000
98 - Affects, ReturnBoolean ::

Select BOOLEAN such that Affects (2, 8)
false
5000
99 - Affects, ReturnBoolean ::

Select BOOLEAN such that Affects (3, 12)
false
5000
100 - Affects, ReturnBoolean ::

Select BOOLEAN such that Affects (3, 13)
false
5000
101 - Affects, ReturnBoolean ::

Select BOOLEAN such that Affects (16, 21)
false
5000
102 - Affects ::
assign a1;
Select a1 such that Affects (a1, 1)
none
5000
103 - Affects ::
assign a1;
Select a1 such that Affects (a1, 10)
12, 17
5000
104 - Affects ::
assign a2;
Select a2 such that Affects (1, a2)
2, 3
5000
105 - Affects ::
assign a2;
Select a2 such that Affects (13, a2)
16
5000
106 - AffectsStar, ReturnBoolean ::

Select BOOLEAN such that Affects* (1, 2)
true
5000
107 - AffectsStar, ReturnBoolean ::

Select BOOLEAN such that Affects* (1, 3)
true
5000
108 - AffectsStar, ReturnBoolean ::

Select BOOLEAN such that Affects* (1, 6)
true
5000
109 - AffectsStar, ReturnBoolean ::

Select BOOLEAN such that Affects* (1, 8)
true
5000
110 - AffectsStar, ReturnBoolean ::

Select BOOLEAN such that Affects* (11, 14)
false
5000
111 - AffectsStar, ReturnBoolean ::

Select BOOLEAN such that Affects* (20, 20)
false
5000
112 - AffectsStar ::
assign a1;
Select a1 such that Affects* (a1, 12)
12
5000
113 - AffectsStar ::
assign a1;
Select a1 such that Affects* (a1, 26)
25
5000
114 - AffectsStar ::
assign a2;
Select a2 such that Affects* (6, a2)
8
5000
115 - AffectsStar ::
assign a2;
Select a2 such that Affects* (20, a2)
none
5000
116 - Parent, Modifies, Next, Uses, Pattern ::
stmt s1, s2; variable v1, v2; assign a;
Select a such that Parent(s1, 10) and Follows(s1, s2) and Modifies(s2, v1) and Next(s1, s2) and Uses(a, v1) pattern a(v2, _)
2, 3, 4, 6, 8, 10, 12, 13, 14, 16, 17, 20, 22, 23, 25, 26, 29, 30
5000